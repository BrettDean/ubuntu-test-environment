FROM ubuntu:latest

# 设置环境变量，确保中文显示正常
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

# 更新系统并安装所需软件包
RUN apt-get update && \
    apt-get install -y \
    iputils-ping \
    apt \
    wget \
    curl \
    dnsutils \
    zip \
    tar \
    docker.io \
    docker-compose-v2 \
    python3-pip \
    git \
    vim \
    nano \
    net-tools \
    htop \
    openssh-client \
    openssh-server \
    jq \
    traceroute \
    tree \
    sudo \
    apache2-utils \
    nginx \
    openssl \
    rsync \
    procps \
    zsh \
    cron \
    lsof \
    rclone \
    nethogs \
    locales \
    gcc \
    libbz2-dev \
    libev-dev \
    libffi-dev \
    libgdbm-dev \
    liblzma-dev \
    libncurses-dev \
    libreadline-dev \
    libsqlite3-dev \
    libssl-dev \
    make \
    tk-dev \
    zlib1g-dev \
    build-essential \
    openjdk-21-jdk \
    npm \
    sqlite3 \
    screen

RUN npm install --global yarn
RUN yarn global add @vue/cli
RUN yarn global add vite
RUN yarn add @vitejs/plugin-vue --dev

# 下载并解压 Python 3.12.4
RUN mkdir /tmp/python && \
    cd /tmp/python && \
    curl -O https://www.python.org/ftp/python/3.12.4/Python-3.12.4.tgz && \
    tar -xvzf Python-3.12.4.tgz && \
    cd Python-3.12.4 && \
    ./configure --prefix=/opt/python/3.12.4 --enable-shared --enable-optimizations --enable-ipv6 LDFLAGS=-Wl,-rpath=/opt/python/3.12.4/lib,--disable-new-dtags && \
    make && \
    make install

# 加入到 PATH 中
RUN echo 'PATH="/opt/python/3.12.4/bin:$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"' >> /etc/environment

# 移除已有的符号链接
RUN rm -f /usr/bin/python3

# 建立软链接
RUN ln -s /opt/python/3.12.4/bin/python3.12 /usr/bin/python3
RUN ln -s /opt/python/3.12.4/bin/python3.12 /usr/bin/python

RUN pip3 install --upgrade pip

RUN pip install certbot

# 将默认 shell 更改为 zsh
RUN chsh -s $(which zsh)

# 下载并运行终端美化脚本
RUN wget -q https://git.dreamdusk.com/Dean/terminalBeautifyScripts/raw/branch/main/vim+zsh/fantasy_terminal.sh && \
    chmod +x fantasy_terminal.sh && \
    ./fantasy_terminal.sh

# 生成并设置 UTF-8 locale
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LC_ALL en_US.UTF-8

# 安装 acme.sh
RUN curl https://get.acme.sh | sh -s email=my@example.com

# 配置 SSH 服务端
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
    mkdir /var/run/sshd

# 再次升级系统软件包
RUN apt-get update && \
    apt-get upgrade -y

# 设置 nvm 环境变量
ENV NVM_DIR /root/.nvm

# 安装 nvm Node.js nrm rimraf
RUN curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash && \
    zsh -c "source ~/.nvm/nvm.sh && nvm install node && nvm use node" && \
    npm install -g nrm rimraf

# 清理安装过程中产生的临时文件
RUN apt-get clean && \
    apt autoremove -y && \
    rm -rf /tmp/* /var/tmp/* && \
    rm -rf /tmp/python

# 配置 nginx 使其在前台运行，并启用
RUN echo "daemon off;" >> /etc/nginx/nginx.conf && \
    chown -R www-data:www-data /var/lib/nginx

CMD \
if [ ! -f "/etc/enterpoint.env" ]; then \
    echo "/etc/enterpoint.env not exist, initialization..."; \
    ssh-keygen -t rsa -C "root" -f "/root/.ssh/ubuntu-test-environment" -N ""; \
    PrivateKey=$(cat /root/.ssh/ubuntu-test-environment); \
    PubKey=$(cat /root/.ssh/ubuntu-test-environment.pub); \
    touch ~/.ssh/authorized_keys; \
    chmod 600 ~/.ssh/authorized_keys; \
    echo "$PubKey" >> ~/.ssh/authorized_keys; \
    echo "ROOT_PrivateKey:\\n" >> /etc/enterpoint.env; echo "PrivateKey copy start at--->$PrivateKey\\n <---PrivateKey copy end at(copy must exatly end before '<---')" >> /etc/enterpoint.env; \
    ROOT_PASSWORD=$(openssl rand -base64 12); \
    echo "root:$ROOT_PASSWORD" | chpasswd; \
    echo "\\nROOT_PASSWORD=$ROOT_PASSWORD" >> /etc/enterpoint.env; \
fi; \
echo "success reading /etc/enterpoint.env"; \
cat /etc/enterpoint.env; \
echo 'export PATH="/opt/python/3.12.4/bin:$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"' >> /root/.zshrc; \
service ssh start; \
service nginx start; \
tail -f /dev/null